{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuelklepper/Projects/webdev/portfolio/src/components/screens/PhotoGallery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport Gallery from 'react-photo-gallery';\nimport Carousel, { Modal, ModalGateway } from 'react-images';\n\nconst PhotoGallery = () => {\n  _s();\n\n  const [currentImage, setCurrentImage] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n  const openLightbox = useCallback((event, {\n    photo,\n    index\n  }) => {\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n  }, []);\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Gallery, {\n      photos: photos,\n      onClick: openLightbox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalGateway, {\n      children: viewerIsOpen ? /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: closeLightbox,\n        children: /*#__PURE__*/_jsxDEV(Carousel, {\n          currentIndex: currentImage,\n          views: photos.map(x => ({ ...x,\n            srcset: x.srcSet,\n            caption: x.title\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PhotoGallery, \"xBacIyr+alk+Y5Q9jdPnin88G/Q=\");\n\n_c = PhotoGallery;\nexport default PhotoGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoGallery\");","map":{"version":3,"sources":["/Users/samuelklepper/Projects/webdev/portfolio/src/components/screens/PhotoGallery.js"],"names":["React","useState","useCallback","Gallery","Carousel","Modal","ModalGateway","PhotoGallery","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","event","photo","index","closeLightbox","photos","map","x","srcset","srcSet","caption","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AAEA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,QAAP,IAAmBC,KAAnB,EAA0BC,YAA1B,QAA8C,cAA9C;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMW,YAAY,GAAGV,WAAW,CAAC,CAACW,KAAD,EAAQ;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAR,KAA6B;AAC5DN,IAAAA,eAAe,CAACM,KAAD,CAAf;AACAJ,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAH+B,EAG7B,EAH6B,CAAhC;;AAKA,QAAMK,aAAa,GAAG,MAAM;AAC1BP,IAAAA,eAAe,CAAC,CAAD,CAAf;AACAE,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEM,MAAjB;AAAyB,MAAA,OAAO,EAAEL;AAAlC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAA,gBACGF,YAAY,gBACX,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEM,aAAhB;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,YAAY,EAAER,YADhB;AAEE,UAAA,KAAK,EAAES,MAAM,CAACC,GAAP,CAAYC,CAAD,KAAQ,EACxB,GAAGA,CADqB;AAExBC,YAAAA,MAAM,EAAED,CAAC,CAACE,MAFc;AAGxBC,YAAAA,OAAO,EAAEH,CAAC,CAACI;AAHa,WAAR,CAAX;AAFT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADW,GAWT;AAZN;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAjCD;;GAAMhB,Y;;KAAAA,Y;AAmCN,eAAeA,YAAf","sourcesContent":["import React, { useState, useCallback } from 'react'\n\nimport Gallery from 'react-photo-gallery'\nimport Carousel, { Modal, ModalGateway } from 'react-images'\n\n\nconst PhotoGallery = () => {\n  const [currentImage, setCurrentImage] = useState(0)\n  const [viewerIsOpen, setViewerIsOpen] = useState(false)\n\n  const openLightbox = useCallback((event, { photo, index }) => {\n    setCurrentImage(index)\n    setViewerIsOpen(true)\n  }, [])\n\n  const closeLightbox = () => {\n    setCurrentImage(0)\n    setViewerIsOpen(false)\n  }\n\n  return (\n    <div>\n      <Gallery photos={photos} onClick={openLightbox} />\n      <ModalGateway>\n        {viewerIsOpen ? (\n          <Modal onClose={closeLightbox}>\n            <Carousel\n              currentIndex={currentImage}\n              views={photos.map((x) => ({\n                ...x,\n                srcset: x.srcSet,\n                caption: x.title,\n              }))}\n            />\n          </Modal>\n        ) : null}\n      </ModalGateway>\n    </div>\n  )\n}\n\nexport default PhotoGallery\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/samuelklepper/Projects/webdev/portfolio/src/components/ui/AlertDismiss.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst AlertDismiss = () => {\n  _s();\n\n  const [show, setShow] = useState(true);\n\n  if (show) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      onClose: () => setShow(false),\n      dismissible: true,\n      children: /*#__PURE__*/_jsxDEV(Alert.Heading, {\n        children: \"Thanks!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"i\", {\n    className: \"fas fa-smile-wink\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AlertDismiss, \"vfh/DqFDMxhJHyczn42K3OB7AlU=\");\n\n_c = AlertDismiss;\nexport default AlertDismiss;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertDismiss\");","map":{"version":3,"sources":["/Users/samuelklepper/Projects/webdev/portfolio/src/components/ui/AlertDismiss.js"],"names":["React","useState","Alert","AlertDismiss","show","setShow"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,iBAAtB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;;AAEA,MAAIG,IAAJ,EAAU;AACR,wBACE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,SAAf;AAAyB,MAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,KAAD,CAA/C;AAAwD,MAAA,WAAW,MAAnE;AAAA,6BACE,QAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,sBAAO;AAAG,IAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAXD;;GAAMF,Y;;KAAAA,Y;AAaN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst AlertDismiss = () => {\n  const [show, setShow] = useState(true)\n\n  if (show) {\n    return (\n      <Alert variant='success' onClose={() => setShow(false)} dismissible>\n        <Alert.Heading>Thanks!</Alert.Heading>\n      </Alert>\n    )\n  }\n  return <i className='fas fa-smile-wink'></i>\n}\n\nexport default AlertDismiss\n"]},"metadata":{},"sourceType":"module"}